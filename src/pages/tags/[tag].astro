---
import { MarkdownInstance } from "astro";
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { Props as PostProps } from "../../layouts/MarkdownPostLayout.astro";

interface Props {
	posts: MarkdownInstance<PostProps["frontmatter"]>[];
}
export async function getStaticPaths() {
	const allPosts = await Astro.glob<PostProps["frontmatter"]>("../posts/*.md");
	const uniqueTags = [...new Set(allPosts.flatMap((post) => post.frontmatter.tags).flat())];
	return uniqueTags.map((tag) => {
		const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}
const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{posts.map((post) => <BlogPost post={post} />)}
	</ul>
</BaseLayout>
